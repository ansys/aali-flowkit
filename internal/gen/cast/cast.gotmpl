// Copyright (C) 2025 ANSYS, Inc. and/or its affiliates.
// SPDX-License-Identifier: MIT
//
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Code generated by internal/gen/cast/gen.go; DO NOT EDIT.

package externalfunctions

{{ range .CastAssertFromInterfaces }}
	// {{ .Name }} casts data of type {{ .FromType }} to {{ .ToType }}
	//
	// This is done via a type assertion. Will panic if assertion fails.
	//
	// Tags:
	//   - @displayName: {{ .DisplayName }}
	//
	// Parameters:
	//   - data ({{ .FromType }})
	//
	// Returns
	//   - {{ .ToType }}
	func {{ .Name }}(data {{ .FromType }}) {{ .ToType }} {
		return data.({{ .ToType }})
	}
{{ end }}

{{ range .CastAssertToInterfaces }}
	// {{ .Name }} casts data of type {{ .FromType }} to {{ .ToType }}
	//
	// Tags:
	//   - @displayName: {{ .DisplayName }}
	//
	// Parameters:
	//   - data ({{ .FromType }})
	//
	// Returns
	//   - {{ .ToType }}
	func {{ .Name }}(data {{ .FromType }}) {{ .ToType }} {
		return data
	}
{{ end }}

func init() {
	{{- range .CastAssertFromInterfaces }}
		ExternalFunctionsMap["{{ .Name }}"] = {{ .Name }}
	{{- end }}
	{{- range .CastAssertToInterfaces }}
		ExternalFunctionsMap["{{ .Name }}"] = {{ .Name }}
	{{- end }}
}
